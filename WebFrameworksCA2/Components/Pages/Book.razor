@using MySql.Data.MySqlClient


<h4>Books</h4>
<button @onclick="DownloadBook">Download Book Details</button>

<input @bind="isbn" placeholder="Enter ISBN" />
@if (isLoading)
{
    <p>Loading...</p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}
else if (bookDetails != null)
{
    <ol>
        <li>
            <strong>Title:</strong> @bookDetails.Title
            <br />
            <strong>Author(s):</strong> @string.Join(", ", bookDetails.Authors.Select(a => a.Name))
            <br />
            <strong>Publish Date:</strong> @bookDetails.PublishDate
            <br />
            <strong>Number of Pages:</strong> @bookDetails.NumberOfPages
            <br />
            <strong>Cover:</strong>
            <img src="@bookDetails.Cover.Medium" alt="Book Cover" />
            <br />
            <a href="https://openlibrary.org/isbn/@isbn" target="_blank">View on Open Library</a>
            <br />
            <button @onclick="() => OnBookButtonClicked(bookDetails.Title)">Action</button>
        </li>
    </ol>
}

@code {
    
    private BookDetails? bookDetails;
    private string isbn = "9780140328721"; // Default ISBN for testing
    private bool isLoading = false;
    private string? errorMessage;

    private void DownloadBook()
    {
        isLoading = true;
        errorMessage = null;

        try
        {
            if (!string.IsNullOrWhiteSpace(isbn))
            {
                // Call the service method to fetch book details by ISBN
                bookDetails = MusicService.GetBookDetails(isbn);
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Failed to fetch book details. Please try again.";
            Console.WriteLine($"Error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void OnBookButtonClicked(string bookTitle)
    {
        var connectionString = "Server=b4wrtzahdokrnwkdisvz-mysql.services.clever-cloud.com;Database=b4wrtzahdokrnwkdisvz;User=u404013ijbde7adc;Password=VCdtkloWCwNiL29KUOL3;Port=3306;";

        try
        {
            // Connect to database
            using var connection = new MySqlConnection(connectionString);
            connection.Open();

            // query to insert book title
            var insertQuery = @"
                INSERT IGNORE INTO Books (Title) 
                VALUES (@Title);";

            using var insertCommand = new MySqlCommand(insertQuery, connection);

            // associates book title with query
            insertCommand.Parameters.AddWithValue("@Title", bookTitle);

            // this pushes the query
            int rowsAffected = insertCommand.ExecuteNonQuery();

            if (rowsAffected > 0)
            {
                Console.WriteLine($"Added new book: {bookTitle}");
            }
            else
            {
                Console.WriteLine($"Book already exists: {bookTitle}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding book to the database: {bookTitle}. Error: {ex.Message}");
        }
    }
}
