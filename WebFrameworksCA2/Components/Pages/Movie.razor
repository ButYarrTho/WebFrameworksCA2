@page "/movies"
@using MySql.Data.MySqlClient

<PageTitle>Movies</PageTitle>

<h3 class="text-center">Movies</h3>

<!-- Search Section -->
<div class="search-section">
    <input type="text" @bind="movieSearchQuery" placeholder="Search Movies" class="search-input" />
    <button @onclick="SearchMovies" class="search-button">Search</button>
    <button @onclick="DownloadMovies" class="download-button">Download Popular Movies</button>
</div>

@if (isLoading)
{
<p>Loading...</p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
<p style="color: red;">@errorMessage</p>
}
else if (isSearchMode && searchResults != null)
{
<h5>Search Results:</h5>
<table class="movies-table">
    <thead>
    <tr>
        <th>#</th>
        <th>Movie Title</th>
        <th>Overview</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var movie in searchResults.Results.Select((value, index) => new { index, value }))
    {
    <tr>
        <td>@(movie.index + 1)</td>
        <td>@movie.value.Title</td>
        <td>@movie.value.Overview</td>
        <td>
            <a href="https://www.themoviedb.org/movie/@movie.value.Id" target="_blank">View on TMDb</a>
            <button @onclick="() => OnMovieButtonClicked(movie.value.Title)">Add to Database</button>
        </td>
    </tr>
    }
    </tbody>
</table>
}
else if (topmovies != null)
{
<h5>Popular Movies:</h5>
<table class="movies-table">
    <thead>
    <tr>
        <th>#</th>
        <th>Movie Title</th>
        <th>Overview</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var movie in topmovies.Results.Select((value, index) => new { index, value }))
    {
    <tr>
        <td>@(movie.index + 1)</td>
        <td>@movie.value.Title</td>
        <td>@movie.value.Overview</td>
        <td>
            <a href="https://www.themoviedb.org/movie/@movie.value.Id" target="_blank">View on TMDb</a>
            <button @onclick="() => OnMovieButtonClicked(movie.value.Title)">Add to Database</button>
        </td>
    </tr>
    }
    </tbody>
</table>
}

@code {
private Movies? topmovies;
private Movies? searchResults;
private bool isLoading = false;
private bool isSearchMode = false;
private string? errorMessage;
private string movieSearchQuery = string.Empty;

private void DownloadMovies()
{
isLoading = true;
errorMessage = null;
isSearchMode = false;

try
{
topmovies = MusicService.GetPopularMovies();
}
catch (Exception ex)
{
errorMessage = "Failed to fetch movies. Please try again.";
Console.WriteLine($"Error: {ex.Message}");
}
finally
{
isLoading = false;
}
}

private void SearchMovies()
{
if (string.IsNullOrWhiteSpace(movieSearchQuery))
{
errorMessage = "Search query cannot be empty.";
return;
}

isLoading = true;
errorMessage = null;
isSearchMode = true;

try
{
searchResults = MusicService.SearchMovies(movieSearchQuery);
}
catch (Exception ex)
{
errorMessage = "Failed to search for movies. Please try again.";
Console.WriteLine($"Error: {ex.Message}");
}
finally
{
isLoading = false;
}
}

private void OnMovieButtonClicked(string movieTitle)
{
var connectionString = "Server=b4wrtzahdokrnwkdisvz-mysql.services.clever-cloud.com;Database=b4wrtzahdokrnwkdisvz;User=u404013ijbde7adc;Password=VCdtkloWCwNiL29KUOL3;Port=3306;";

try
{
// Connect to the database
using var connection = new MySqlConnection(connectionString);
connection.Open();

// SQL query to put movie title into db
var insertQuery = @"
                                INSERT IGNORE INTO Movies (Title) 
                                VALUES (@Title);";

using var insertCommand = new MySqlCommand(insertQuery, connection);

// Associate movie title with the query
insertCommand.Parameters.AddWithValue("@Title", movieTitle);

// Execute the query
int rowsAffected = insertCommand.ExecuteNonQuery();

if (rowsAffected > 0)
{
Console.WriteLine($"Added new movie: {movieTitle}");
}
else
{
Console.WriteLine($"Movie already exists: {movieTitle}");
}
}
catch (Exception ex)
{
Console.WriteLine($"Error adding movie to the database: {movieTitle}. Error: {ex.Message}");
}
}
}

<style>
    /* General layout */
    .search-section {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .search-input {
        padding: 8px;
        font-size: 16px;
        width: 250px;
        margin-right: 10px;
    }

    .search-button, .download-button {
        padding: 8px 15px;
        font-size: 16px;
        margin-left: 10px;
        cursor: pointer;
    }

    .search-button {
        background-color: #4CAF50;
        color: white;
        border: none;
    }

    .download-button {
        background-color: #2196F3;
        color: white;
        border: none;
    }

    /* Table layout for movies */
    .movies-table {
        width: 80%;
        max-width: 1000px;
        margin: 0 auto;
        border-collapse: collapse;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .movies-table th, .movies-table td {
        text-align: left;
        padding: 12px;
        border: 1px solid #ddd;
    }

    .movies-table th {
        background-color: #f0f0f0;
        font-weight: bold;
        color: #333;
    }

    .movies-table tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    .movies-table tr:hover {
        background-color: #f1f1f1;
    }

    /* Center the table content */
    h3.text-center {
        text-align: center;
        font-size: 2em;
        margin-bottom: 20px;
    }

    /* Button style for actions */
    button {
        background-color: #4CAF50;
        color: white;
        padding: 8px 15px;
        border: none;
        cursor: pointer;
        font-size: 14px;
    }

    button:hover {
        background-color: #45a049;
    }

    /* Message for no results */
    p {
        text-align: center;
        color: #888;
        font-size: 1.2em;
    }
</style>
