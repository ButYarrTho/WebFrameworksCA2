@page "/music"
@using MySql.Data.MySqlClient


<h3 class="text-center">Top Artists</h3>


<div class="search-section">
    <input type="text" @bind="searchQuery" placeholder="Search for artists..." class="search-input" />
    <button @onclick="SearchArtists" class="search-button">Search</button>
    <button @onclick="DownloadArtists" class="download-button">Download Top Artists</button>
</div>

@if (isLoading)
{
<p>Loading...</p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
<p style="color: red;">@errorMessage</p>
}
else if (topartists != null && topartists.Results?.ArtistMatches?.Artists?.Length > 0)
{
<table class="artists-table">
    <thead>
    <tr>
        <th>#</th>
        <th>Artist Name</th>
        <th>Playcount</th>
        <th>Actions</th>
        <th>Last.fm</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var artist in topartists.Results.ArtistMatches.Artists.Select((value, index) => new { index, value }))
    {
    <tr>
        <td>@(artist.index + 1)</td>
        <td>@artist.value.Name</td>
        <td>@artist.value.Playcount</td>
        <td>
            <button @onclick="() => OnSongButtonClicked(artist.value.Name)">Add to Database</button>
        </td>
        <td>
            <a href="https://www.last.fm/music/@artist.value.Name" target="_blank">View on Last.fm</a> <!-- last.fm link -->
        </td>
    </tr>
    }
    </tbody>
</table>
}
else if (topartists != null && topartists.Topartists?.Artist?.Length > 0)
{
<table class="artists-table">
    <thead>
    <tr>
        <th>#</th>
        <th>Artist Name</th>
        <th>Playcount</th>
        <th>Rank</th>
        <th>Actions</th>
        <th>Last.fm</th> <!-- New column for Last.fm link -->
    </tr>
    </thead>
    <tbody>
    @foreach (var artist in topartists.Topartists.Artist.Select((value, index) => new { index, value }))
    {
    <tr>
        <td>@(artist.index + 1)</td>
        <td>@artist.value.Name</td>
        <td>@artist.value.Playcount</td>
        <td>@artist.value.Attr?.Rank</td>
        <td>
            <button @onclick="() => OnSongButtonClicked(artist.value.Name)">Add to Database</button>
        </td>
        <td>
            <a href="https://www.last.fm/music/@artist.value.Name" target="_blank">View on Last.fm</a> <!-- last.fm link -->
        </td>
    </tr>
    }
    </tbody>
</table>
}
else
{
<p>No artists found. Try searching or downloading top artists.</p>
}

@code {
private Artists? topartists;
private bool isLoading = false;
private string? errorMessage;
private string searchQuery = string.Empty;

private void DownloadArtists()
{
isLoading = true;
errorMessage = null;

try
{
topartists = MusicService.GetTopArtists();
}
catch (Exception ex)
{
errorMessage = "Failed to fetch artists. Please try again.";
Console.WriteLine($"Error: {ex.Message}");
}
finally
{
isLoading = false;
}

}

// Search for artists
private void SearchArtists()
{
if (string.IsNullOrWhiteSpace(searchQuery))
{
errorMessage = "Please enter an artist name to search.";
topartists = null;
return;
}

isLoading = true;
errorMessage = null;

try
{
topartists = MusicService.SearchArtists(searchQuery);

// Check if search results exist
if (topartists == null || topartists.Results?.ArtistMatches?.Artists == null || topartists.Results.ArtistMatches.Artists.Length == 0)
{
errorMessage = "No results found for your search.";
}
}
catch (Exception ex)
{
errorMessage = "Failed to search for artists. Please try again.";
Console.WriteLine($"Error: {ex.Message}");
}
finally
{
isLoading = false;
}
}

private void OnSongButtonClicked(string artistName)
{
var connectionString = "Server=b4wrtzahdokrnwkdisvz-mysql.services.clever-cloud.com;Database=b4wrtzahdokrnwkdisvz;User=u404013ijbde7adc;Password=VCdtkloWCwNiL29KUOL3;Port=3306;";

try
{
// this connects to db
using var connection = new MySqlConnection(connectionString);
connection.Open();

// this is SQL query
var insertQuery = @"
            INSERT IGNORE INTO Artists (Name) 
            VALUES (@Name);";

using var insertCommand = new MySqlCommand(insertQuery, connection);

// associates artist name to query
insertCommand.Parameters.AddWithValue("@Name", artistName);

// this pushes the query
int rowsAffected = insertCommand.ExecuteNonQuery();

if (rowsAffected > 0)
{
Console.WriteLine($"Added new artist: {artistName}");
}
else
{
Console.WriteLine($"Artist already exists: {artistName}");
}
}
catch (Exception ex)
{
Console.WriteLine($"Error adding artist to the database: {artistName}. Error: {ex.Message}");
}
}
}

<style>
    /* General layout */
    .search-section {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .search-input {
        padding: 8px;
        font-size: 16px;
        width: 250px;
        margin-right: 10px;
    }

    .search-button, .download-button {
        padding: 8px 15px;
        font-size: 16px;
        margin-left: 10px;
        cursor: pointer;
    }

    .search-button {
        background-color: #4CAF50;
        color: white;
        border: none;
    }

    .download-button {
        background-color: #2196F3;
        color: white;
        border: none;
    }

    /* Table layout for artists */
    .artists-table {
        width: 80%;
        max-width: 1000px;
        margin: 0 auto;
        border-collapse: collapse;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .artists-table th, .artists-table td {
        text-align: left;
        padding: 12px;
        border: 1px solid #ddd;
    }

    .artists-table th {
        background-color: #f0f0f0;
        font-weight: bold;
        color: #333;
    }

    .artists-table tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    .artists-table tr:hover {
        background-color: #f1f1f1;
    }

    /* Center the table content */
    h3.text-center {
        text-align: center;
        font-size: 2em;
        margin-bottom: 20px;
    }

    /* Button style for actions */
    button {
        background-color: #4CAF50;
        color: white;
        padding: 8px 15px;
        border: none;
        cursor: pointer;
        font-size: 14px;
    }

    button:hover {
        background-color: #45a049;
    }

    /* Message for no results */
    p {
        text-align: center;
        color: #888;
        font-size: 1.2em;
    }
</style>
